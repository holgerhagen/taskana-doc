"use strict";(self.webpackChunkfirst_example=self.webpackChunkfirst_example||[]).push([[598],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>p});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),h=d(a),p=r,u=h["".concat(s,".").concat(p)]||h[p]||c[p]||l;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},1262:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var n=a(7294),r=a(2389);function l(e){let{children:t,fallback:a}=e;return(0,r.Z)()?n.createElement(n.Fragment,null,null==t?void 0:t()):a??null}},3973:(e,t,a)=>{var n=a(1262),r=a(7294);function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=l(n),i=l(r);!function(e,t){void 0===t&&(t={});var a=t.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===a&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}(".docusaurus-plugin-drawio {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  text-align: center;\n  overflow-x: auto;\n}\n\nhtml[data-theme='dark'] .docusaurus-plugin-drawio {\n  background-color: #333;\n  color: #fff;\n}\n\n.docusaurus-plugin-drawio > div {\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid transparent;\n  min-width: 180px;\n}\n");var s=function(e){var t=e.content,a=r.useState("loading..."),n=a[0],l=a[1],o=r.useRef(null),s=window.GraphViewer;return r.useEffect((function(){if(s)if(t){var e={editable:"_blank",highlight:"#0000ff",nav:!0,resize:!0,toolbar:"zoom lightbox",xml:t},a=JSON.stringify(e);o.current.dataset.mxgraph=a,l(""),setTimeout((function(){s.createViewerForElement(o.current)}),0)}else l("drawio file is empty");else l("GraphViewer is not loaded")}),[]),i.default.createElement("div",{className:"docusaurus-plugin-drawio"},i.default.createElement("div",{className:"docusaurus-plugin-drawio__content",ref:o},n))},d=r.memo((function(e){var t=e.content;return i.default.createElement(o.default,{fallback:i.default.createElement(i.default.Fragment,null,"loading...")},(function(){return i.default.createElement(s,{content:t})}))}));e.exports=d},949:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(3973),o=a.n(l);const i={sidebar_position:1},s="Overview",d={unversionedId:"user-guide/core-concepts/overview",id:"user-guide/core-concepts/overview",title:"Overview",description:"TASKANA is an open source Task Management System. It includes defining and creating tasks and keeping track of their execution, as well as distributing them to their responsible users. TASKANA also offers options for detailed descriptions of each task using attachments, object references, and many other properties. In the following article, the basic entities of TASKANA and related concepts are explained.",source:"@site/docs/user-guide/core-concepts/overview.md",sourceDirName:"user-guide/core-concepts",slug:"/user-guide/core-concepts/overview",permalink:"/taskana-doc/docs/user-guide/core-concepts/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"userSidebar",previous:{title:"Core Concepts",permalink:"/taskana-doc/docs/category/core-concepts"},next:{title:"Java-API usage",permalink:"/taskana-doc/docs/user-guide/core-concepts/javaApiUsage"}},m={},c=[{value:"TASKANA Entities",id:"taskana-entities",level:2},{value:"Task",id:"task",level:3},{value:"ObjectReference",id:"objectreference",level:3},{value:"Attachment",id:"attachment",level:3},{value:"Classification",id:"classification",level:3},{value:"Workbasket",id:"workbasket",level:3},{value:"WorkbasketAccessItem",id:"workbasketaccessitem",level:3},{value:"Summary Objects",id:"summary-objects",level:3},{value:"Operations on entities",id:"operations-on-entities",level:2},{value:"List of important features",id:"list-of-important-features",level:2}],h={toc:c};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"TASKANA is an open source Task Management System. It includes defining and creating tasks and keeping track of their execution, as well as distributing them to their responsible users. TASKANA also offers options for detailed descriptions of each task using attachments, object references, and many other properties. In the following article, the basic entities of TASKANA and related concepts are explained. "),(0,r.kt)("p",null,"In order to provide its functionality, TASKANA consists of different components. They are shown in the diagram below. As different components provide different features, the description of relevant modules can be found ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/reference/modules"},"here"),". You can read more about the Java Library and its usage ",(0,r.kt)("a",{parentName:"p",href:"./javaApiUsage"},"here"),". "),(0,r.kt)(o(),{content:'<mxfile host="65bd71144e">\n    <diagram id="ABNCZyfbNFh-MfdMv4a-" name="Page-1">\n        <mxGraphModel dx="1561" dy="566" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">\n            <root>\n                <mxCell id="0"/>\n                <mxCell id="1" parent="0"/>\n                <mxCell id="18" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#eeeeee;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="-10" width="480" height="120" as="geometry"/>\n                </mxCell>\n                <mxCell id="14" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=none;endFill=0;strokeColor=default;strokeWidth=1;startArrow=classicThin;startFill=1;" parent="1" source="5" target="7" edge="1">\n                    <mxGeometry relative="1" as="geometry"/>\n                </mxCell>\n                <mxCell id="26" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=18;endArrow=none;endFill=0;strokeColor=default;strokeWidth=2;" parent="1" source="5" target="22" edge="1">\n                    <mxGeometry relative="1" as="geometry"/>\n                </mxCell>\n                <mxCell id="38" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;startArrow=classicThin;startFill=1;endArrow=none;endFill=0;" parent="1" source="5" target="9" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <Array as="points">\n                            <mxPoint x="120" y="285"/>\n                            <mxPoint x="120" y="245"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="5" value="Java library" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#b1ddf0;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="160" y="250" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="13" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;strokeColor=default;strokeWidth=1;endArrow=none;endFill=0;startArrow=classicThin;startFill=1;" parent="1" source="6" target="5" edge="1">\n                    <mxGeometry relative="1" as="geometry"/>\n                </mxCell>\n                <mxCell id="6" value="TASKANA DB" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fillColor=#b1ddf0;strokeColor=#10739e;" parent="1" vertex="1">\n                    <mxGeometry x="175" y="340" width="110" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="15" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=none;endFill=0;strokeColor=default;strokeWidth=1;startArrow=classicThin;startFill=1;" parent="1" source="7" target="11" edge="1">\n                    <mxGeometry relative="1" as="geometry"/>\n                </mxCell>\n                <mxCell id="16" style="edgeStyle=none;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=none;endFill=0;strokeColor=default;strokeWidth=1;" parent="1" target="12" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <mxPoint x="230" y="140" as="sourcePoint"/>\n                        <Array as="points">\n                            <mxPoint x="390" y="140"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="17" style="edgeStyle=none;html=1;endArrow=none;endFill=0;strokeColor=default;strokeWidth=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" target="10" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <mxPoint x="230" y="140" as="targetPoint"/>\n                        <mxPoint x="230" y="140" as="sourcePoint"/>\n                        <Array as="points">\n                            <mxPoint x="230" y="140"/>\n                            <mxPoint x="70" y="140"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="36" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;startArrow=classicThin;startFill=1;endArrow=none;endFill=0;" parent="1" source="7" target="9" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <Array as="points">\n                            <mxPoint x="120" y="195"/>\n                            <mxPoint x="120" y="245"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="7" value="REST Service" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#b1ddf0;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="160" y="160" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="39" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;startArrow=none;startFill=0;endArrow=classicThin;endFill=1;" parent="1" source="8" target="5" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <Array as="points">\n                            <mxPoint x="330" y="235"/>\n                            <mxPoint x="330" y="268"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="43" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="8" target="7">\n                    <mxGeometry relative="1" as="geometry">\n                        <Array as="points">\n                            <mxPoint x="330" y="235"/>\n                            <mxPoint x="330" y="195"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="8" value="Custom JavaEE Client" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fad7ac;strokeColor=#b46504;" parent="1" vertex="1">\n                    <mxGeometry x="380" y="200" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="9" value="Custom Spring Client" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fad7ac;strokeColor=#b46504;" parent="1" vertex="1">\n                    <mxGeometry x="-60" y="210" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="10" value="TASKANA Workplace" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry y="25" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="11" value="TASKANA Admin" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="160" y="25" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="12" value="TASKANA Monitor" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="320" y="25" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="19" value="&lt;font style=&quot;font-size: 18px&quot;&gt;TASKANA Web&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="-100" y="40" width="80" height="40" as="geometry"/>\n                </mxCell>\n                <mxCell id="21" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;fontSize=18;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="-30" width="20" height="120" as="geometry"/>\n                </mxCell>\n                <mxCell id="22" value="Adapter" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#b1ddf0;strokeColor=#10739e;" parent="1" vertex="1">\n                    <mxGeometry x="550" y="250" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="25" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;fontSize=18;endArrow=classicThin;endFill=1;strokeColor=default;strokeWidth=1;startArrow=classicThin;startFill=1;" parent="1" source="23" target="22" edge="1">\n                    <mxGeometry relative="1" as="geometry"/>\n                </mxCell>\n                <mxCell id="23" value="Camunda" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fad7ac;strokeColor=#b46504;" parent="1" vertex="1">\n                    <mxGeometry x="550" y="370" width="140" height="70" as="geometry"/>\n                </mxCell>\n                <mxCell id="27" value="&lt;div&gt;&lt;b style=&quot;font-size: 12px&quot;&gt;Legend:&lt;/b&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;strokeColor=default;align=left;verticalAlign=top;spacingLeft=8;" parent="1" vertex="1">\n                    <mxGeometry x="540" y="10" width="180" height="170" as="geometry"/>\n                </mxCell>\n                <mxCell id="28" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fad7ac;strokeColor=#b46504;" parent="1" vertex="1">\n                    <mxGeometry x="550" y="50" width="50" height="30" as="geometry"/>\n                </mxCell>\n                <mxCell id="29" value="External&lt;br&gt;(not included in TASKANA)" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="600" y="50" width="90" height="30" as="geometry"/>\n                </mxCell>\n                <mxCell id="30" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#b1ddf0;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="550" y="95" width="50" height="25" as="geometry"/>\n                </mxCell>\n                <mxCell id="31" value="Part of the Application" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="600" y="95" width="90" height="30" as="geometry"/>\n                </mxCell>\n                <mxCell id="32" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=default;" parent="1" vertex="1">\n                    <mxGeometry x="550" y="140" width="50" height="30" as="geometry"/>\n                </mxCell>\n                <mxCell id="34" value="Included in frontend of the Application" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="600" y="140" width="90" height="30" as="geometry"/>\n                </mxCell>\n                <mxCell id="41" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;startArrow=classicThin;startFill=1;endArrow=none;endFill=0;" parent="1" source="40" edge="1">\n                    <mxGeometry relative="1" as="geometry">\n                        <mxPoint x="620" y="320" as="targetPoint"/>\n                        <Array as="points">\n                            <mxPoint x="780" y="350"/>\n                            <mxPoint x="620" y="350"/>\n                        </Array>\n                    </mxGeometry>\n                </mxCell>\n                <mxCell id="40" value="Other Systems" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fad7ac;strokeColor=#b46504;" parent="1" vertex="1">\n                    <mxGeometry x="710" y="370" width="140" height="70" as="geometry"/>\n                </mxCell>\n            </root>\n        </mxGraphModel>\n    </diagram>\n</mxfile>',mdxType:"Drawio"}),(0,r.kt)("h2",{id:"taskana-entities"},"TASKANA Entities"),(0,r.kt)("p",null,"All TASKANA Entities can be found in the Java API. You can read more about our Java API ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/core-concepts/javaApiUsage"},"here"),". For better readability, entities are capitalized in the documentation. "),(0,r.kt)("p",null,"TASKANA operates using Tasks, Classifications and Workbaskets. Additional entities are Attachments, ObjectReferences and WorkbasketAccessIds. The entities are stored in the ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/configuration/database"},"configured database"),". You can see the detailed data model ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/reference/dataModel"},"here"),"."),(0,r.kt)(o(),{content:'<mxfile host="65bd71144e">\n    <diagram id="ABNCZyfbNFh-MfdMv4a-" name="Page-1">\n        <mxGraphModel dx="734" dy="566" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">\n            <root>\n                <mxCell id="0"/>\n                <mxCell id="1" parent="0"/>\n                <mxCell id="4" value="&lt;b&gt;&lt;font style=&quot;font-size: 17px&quot;&gt;Classification&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="234" y="200" width="180" height="67.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="5" value="&lt;b&gt;&lt;font style=&quot;font-size: 16px&quot;&gt;Task&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="20" y="162.5" width="180" height="67.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="10" value="&lt;b&gt;&lt;font style=&quot;font-size: 16px&quot;&gt;Workbasket&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="440" y="162.5" width="180" height="67.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="27" value="&lt;b&gt;&lt;font style=&quot;font-size: 14px&quot;&gt;Attachment&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="20" y="240" width="90" height="47.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="28" value="&lt;b&gt;&lt;font style=&quot;font-size: 14px&quot;&gt;Object Reference&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="120" y="240" width="90" height="47.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="30" value="&lt;b&gt;&lt;font style=&quot;font-size: 14px&quot;&gt;WorkbasketAccessItem&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="445" y="250" width="170" height="37.5" as="geometry"/>\n                </mxCell>\n            </root>\n        </mxGraphModel>\n    </diagram>\n</mxfile>',mdxType:"Drawio"}),(0,r.kt)("h3",{id:"task"},"Task"),(0,r.kt)("p",null,"The Task entity represents a human task that should be worked on by one of the resposible users. A Task is identified by unique id that cannot be changed after creation. "),(0,r.kt)("p",null,"Each Task has exactly one Classification and an arbitrary number of Attachments. Each Attachment also has a Classification. These Classifications categorize the Task and the Attachment. They also determine some of their properties. For example, you can prioritize Tasks differently by using different Classifications. To compute the priority of a Task, take the greatest priority of the Classification of the Task and the Classifications of its Attachments. "),(0,r.kt)("p",null,"The Task is assigned to exactly one Workbasket. A Workbasket describes the group of people who can work on this Task. This way, different users have access to different Tasks. "),(0,r.kt)("p",null,"In order to enable the Task lifecycle, the Task has a state. For example, after a Task has been created, it's in state READY. The following diagramm shows the states of a Task. The transitions between the states are defined ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/reference/taskLifecycle"},"here"),"  "),(0,r.kt)(o(),{content:'<mxfile host="65bd71144e">\n    <diagram id="ABNCZyfbNFh-MfdMv4a-" name="Page-1">\n        <mxGraphModel dx="734" dy="566" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">\n            <root>\n                <mxCell id="0"/>\n                <mxCell id="1" parent="0"/>\n                <mxCell id="21" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="360" y="430" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="20" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="360" y="280" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="18" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry y="590" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="17" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry y="432.5" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="16" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry y="280" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="19" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="360" y="128.75" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="15" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=none;" parent="1" vertex="1">\n                    <mxGeometry y="130" width="330" height="130" as="geometry"/>\n                </mxCell>\n                <mxCell id="4" value="&lt;b&gt;CLAIMED&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="10" y="305" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="5" value="&lt;b&gt;READY&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="10" y="153.75" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="8" value="&lt;b&gt;READY_FOR_REVIEW&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="370" y="155" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="9" value="&lt;b&gt;IN_REVIEW&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="370" y="303.75" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="10" value="&lt;b&gt;COMPLETED&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="10" y="457.5" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="11" value="&lt;b&gt;CANCELLED&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="370" y="457.5" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="12" value="&lt;b&gt;TERMINATED&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#bac8d3;strokeColor=none;" parent="1" vertex="1">\n                    <mxGeometry x="10" y="617.5" width="140" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="14" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;The state of a Task after its creation. READY Tasks are seen by all users with access to the Workbasket of the Task. A READY Task can be claimed by a user who wants to work on it.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=left;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="155" y="135" width="165" height="120" as="geometry"/>\n                </mxCell>\n                <mxCell id="22" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;After a Task has been claimed by a user, its state is CLAIMED. It means that the Task is being processed by the user. The user processing the Task is calles owner.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=left;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="155" y="290" width="165" height="107.5" as="geometry"/>\n                </mxCell>\n                <mxCell id="23" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;The state of a Task after it has been completed. This is an end state, so that the state of the Task cannot be changed anymore.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=left;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="160" y="456.25" width="160" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="24" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;The state of a Task after it has been terminated.&amp;nbsp;&lt;/span&gt;&lt;span&gt;This is an end state, so that the state of the Task cannot be changed anymore.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=right;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="160" y="617.5" width="160" height="80" as="geometry"/>\n                </mxCell>\n                <mxCell id="25" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;The state of a Task after a review on a CLAIMED Task has been requested. Tasks in this state are seen by all users with&amp;nbsp; access to the Workbasket . They can be claimed by a user who wants to review.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=left;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="520" y="128.75" width="160" height="120" as="geometry"/>\n                </mxCell>\n                <mxCell id="26" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;After a Task in the&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;text-align: justify&quot;&gt;READY_FOR_REVIEW state&lt;/span&gt;&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;has been claimed, it\'s IN_REVIEW. The user who claimed the Task is reviewing it. This user is called owner.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=left;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="520" y="290" width="160" height="110" as="geometry"/>\n                </mxCell>\n                <mxCell id="27" value="&lt;div style=&quot;text-align: justify&quot;&gt;&lt;span&gt;The state of a Task after it has been cancelled.&amp;nbsp;&lt;/span&gt;&lt;span&gt;This is an end state, so that the state of the Task cannot be changed anymore.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=none;align=center;strokeColor=none;verticalAlign=top;" parent="1" vertex="1">\n                    <mxGeometry x="520" y="455" width="160" height="80" as="geometry"/>\n                </mxCell>\n            </root>\n        </mxGraphModel>\n    </diagram>\n</mxfile>',mdxType:"Drawio"}),(0,r.kt)("p",null,"Each Task has different timestamps: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"created"),": Set automatically during the creation of a Task."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"planned"),": Set manually. Describes when somebody should start working on the Task."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"received"),": Can be set manually or automatically. Describes when the Task was first mentioned, even if it's before creation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"due"),": Set automatically during creation or update of a Task. Describes deadline for Task completion.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Computed as following:",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"planned + the greatest service level of the Classification of the Task and the Classification of its Attachment."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"claimed"),":  Set automatically while a Task is being claimed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"completed"),":  Set automatically while a Task is being completed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"modified"),": Set automatically while a Task is being modified in any way.")),(0,r.kt)("h3",{id:"objectreference"},"ObjectReference"),(0,r.kt)("p",null,"ObjectReference refers to a Task related document or any other real world object that the Task is about. The document is identified by the value field of ObjectReference. Each Task must have one primary ObjectReference. The primary ObjectReference defines the main involved document. A Task can have several secondary ObjectReferences that are also relevant for the Task."),(0,r.kt)("h3",{id:"attachment"},"Attachment"),(0,r.kt)("p",null,"Similar to ObjectReference, an Attachment describes a Task related document. While an ObjectReference only refers to an object, an Attachment describes it using different attributes. That's why an Attachment has a Classification and an ObjectReference. An example Attachment can describe a letter that lead to the Task Creation. In this case, the ObjectReference of the Attachment will refer to the letter that is stored in a different system. "),(0,r.kt)("h3",{id:"classification"},"Classification"),(0,r.kt)("p",null,'The Classification entity represents a category of Tasks. The Tasks with the same Classification have some common attributes. For example, the due date and priority of a Task is computed using its Classification. A Classification can be identified by its id. Alternatively, a Classification has a key which identifies it in a certain domain. This way, the Classification can be determined using the (key, domain) pair. There can be multiple Classification with the same key in different domains. For each key, there is a master Classification. A master Classification has a domain value "" (empty String). If a Classification is not found in a given domain, then the master Classification with the same key is returned. The successful deletion of the master Classification means the deletion of all Classifications with that key.'),(0,r.kt)("h3",{id:"workbasket"},"Workbasket"),(0,r.kt)("p",null," A Workbasket is a list of Tasks. It's used to manage the group of people who can work on the Tasks in this list. Each user has access to a set of Workbaskets. For example, each team member has access to the Workbasket of the team. Similar to a Classification, a Workbasket can be identified either by an id or by the (key, domain) pair. There can be multiple Workbaskets with the same key but different domains. "),(0,r.kt)("p",null,"There are different options for accessing a Workbasket. You can read more about them and other permissions ",(0,r.kt)("a",{parentName:"p",href:"./securityAndPermissions#access-to-workbaskets"},"here"),"."),(0,r.kt)("p",null,"TASKANA provides different options for choosing a Workbasket for a specific Task. For example, there is the Task Routing feature. Task Routing allows to implement custom logic for determining the Workbasket for a Task. "),(0,r.kt)("h3",{id:"workbasketaccessitem"},"WorkbasketAccessItem"),(0,r.kt)("p",null,"A WorkbasketAccessItem specifies permissions for a given Workbasket and a specific user or group. You can read more about different permissions ",(0,r.kt)("a",{parentName:"p",href:"./securityAndPermissions#access-to-workbaskets"},"here"),". There is also an ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/core-concepts/securityAndPermissions#example-workbasketaccesslist-table"},"example table")," containing WorkbasketAccessItems. "),(0,r.kt)("h3",{id:"summary-objects"},"Summary Objects"),(0,r.kt)("hr",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"operations-on-entities"},"Operations on entities"),(0,r.kt)("p",null,"TASKANA provides following operations on its entities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Creating"),(0,r.kt)("li",{parentName:"ul"},"Updating"),(0,r.kt)("li",{parentName:"ul"},"Deleting"),(0,r.kt)("li",{parentName:"ul"},"Querying (additionaly allows filtering and sorting entities by properties)")),(0,r.kt)("p",null,"You can read technical details about operating on entities ",(0,r.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/core-concepts/javaApiUsage"},"here")),(0,r.kt)("h2",{id:"list-of-important-features"},"List of important features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Monitoring: ???"),(0,r.kt)("li",{parentName:"ul"},"History: ???"),(0,r.kt)("li",{parentName:"ul"},"SPIs: ???"),(0,r.kt)("li",{parentName:"ul"},"...")))}p.isMDXComponent=!0}}]);