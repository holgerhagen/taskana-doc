"use strict";(self.webpackChunkfirst_example=self.webpackChunkfirst_example||[]).push([[888],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,k=c["".concat(s,".").concat(m)]||c[m]||p[m]||r;return n?i.createElement(k,o(o({ref:t},u),{},{components:n})):i.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:6},o="Holidays and Working Days",l={unversionedId:"user-guide/configuration/holidays-working-time",id:"user-guide/configuration/holidays-working-time",title:"Holidays and Working Days",description:"The configuration of these parameters is in the file `taskana.properties`.",source:"@site/docs/user-guide/configuration/holidays-working-time.md",sourceDirName:"user-guide/configuration",slug:"/user-guide/configuration/holidays-working-time",permalink:"/taskana-doc/docs/user-guide/configuration/holidays-working-time",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"userSidebar",previous:{title:"TASKANA-jobs",permalink:"/taskana-doc/docs/user-guide/configuration/jobs-configuration"},next:{title:"History and Custom Properties",permalink:"/taskana-doc/docs/user-guide/configuration/history-custom"}},s={},d=[{value:"Holidays",id:"holidays",level:2},{value:"Working time",id:"working-time",level:2}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"holidays-and-working-days"},"Holidays and Working Days"),(0,a.kt)("p",null,"The configuration of these parameters is in the file ",(0,a.kt)("inlineCode",{parentName:"p"},"taskana.properties"),". "),(0,a.kt)("p",null,"Some parameters allow multiple values specified as a list. In this case, individual values are separated by a configurable separator. Use the ",(0,a.kt)("em",{parentName:"p"},"propertiesSeparator"),' parameter to specify it. If none is provided, the default is "|". If you specify a propertiesSeparator, no list item in the properties file can contain any character from the propertiesSeparator.'),(0,a.kt)("h2",{id:"holidays"},"Holidays"),(0,a.kt)("p",null,"Holidays can be customized. This is relevant because time on a holiday doesn't count towards working time. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.german.holidays.enabled"),": Standard German holidays will be enabled."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.german.holidays.corpus-christi.enabled"),": The holiday corpus christi will be activated.  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.custom.holidays"),": Holiday dates specified as a list will be added. Each holiday should be in the dd.MM format.\nExample custom holidays: ",(0,a.kt)("inlineCode",{parentName:"li"},"taskana.custom.holidays=31.07|16.12"))),(0,a.kt)("h2",{id:"working-time"},"Working time"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.schedule.MONDAY")," : Working time on Monday, e. g. 09:00-18:00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.schedule.TUESDAY")," : Working time on Tuesday, e. g. 09:00-18:00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.schedule.WEDNESDAY")," : Working time on Wednesday, e. g. 09:00-18:00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.schedule.THURSDAY")," : Working time on Thursday, e. g. 09:00-18:00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.schedule.FRIDAY")," : Working time on Friday, e. g. 09:00-18:00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"taskana.workingTime.timezone")," : Time zone, e. g. UTC")))}p.isMDXComponent=!0}}]);